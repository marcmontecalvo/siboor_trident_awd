[gcode_macro Z_TILT_ADJUST]     # IDM/Cartographer optimized 3Z leveling macro
rename_existing: _Z_TILT_ADJUST
gcode:
    SAVE_GCODE_STATE NAME=STATE_Z_TILT         # Save current state for Z tilt adjustment
    # Change LED status
    _STATUS_LEVELING
    BED_MESH_CLEAR                             # Clear bed mesh
    {% if not printer.z_tilt.applied %}
      _Z_TILT_ADJUST horizontal_move_z=10 retry_tolerance=1   # Adjust Z tilt with higher tolerance initially
    {% endif %}
    _Z_TILT_ADJUST horizontal_move_z=2          # Fine-tune Z tilt adjustment
    RESTORE_GCODE_STATE NAME=STATE_Z_TILT       # Restore saved state after adjustment

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  100
variable_purge_distance:  5
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro CHANGE_FILAMENT]
gcode:
    PAUSE
    UNLOAD_FILAMENT
    CLEAR_ACTIVE_SPOOL
    #SET_ACTIVE_SPOOL=ID

####################################################################################
##                               Bed Leveling and Height Calibration Macro
####################################################################################
[gcode_macro _G32]
# Defines a G-code macro for bed leveling and height calibration
gcode:
    BED_MESH_CLEAR               # Clear bed mesh
    G28                          # Home all axes
    Z_TILT_ADJUST                # Perform gantry leveling
    G28                          # Home all axes
    G0 X175 Y175 Z30 F3600       # Fast move to X150 Y150 Z30 at 3600 mm/min

#--------------------------------------------------------------------
[gcode_macro DRAW_LINES]
gcode:
    G90                           # Absolute positioning
    G1 X100  Y5         F7200     # Move to start position
    M83                           # Set extruder to relative mode
    G1 E15 F400                   # Extrude filament
    G1 X150 Z0.28 F7200           # Lower Z axis
    G1 X200 Y5   Z0.28 F1200 E10  # Draw the first line
    G92 E0                        # Reset Extruder
    G90                           # Return to absolute positioning

#####################################################################
#   A better print_start macro for v2/trident
#####################################################################

## *** THINGS TO UNCOMMENT: ***
## Bed mesh (2 lines at 2 locations)
## Nevermore (if you have one)
## Z_TILT_ADJUST (For Trident only)
## QUAD_GANTRY_LEVEL (For V2.4 only)

[gcode_macro _PRINT_START2]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED_TEMP|int %}
  {% set target_extruder = params.EXTRUDER_TEMP|int %}
  {% set target_chamber = params.CHAMBER_TEMP|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  _STATUS_HOMING                                       # Set LEDs to homing-mode
  G28                                                  # Full home (XYZ)
  G90                                                  # Absolute position
  ##BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)
  SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"            # Display info on display
  _STATUS_HEATING                                      # Set LEDs to heating-mode
  M106 S255                                            # Turn on the PT-fan
  M190 S{target_bed}                                   # Set the target temp for the bed
  SET_FAN_SPEED FAN=Filter SPEED=1
  
  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                  # Display info on display
  M109 S150                                            # Heat hotend to 150c

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  #{% if params.BED_TEMP|int > 90 %}
    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                     # Turn on the nevermore
  #  SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c" # Display info on display
  #  TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  #{% else %}
  #  SET_DISPLAY_TEXT MSG="Soak for 5 min"              # Display info on display
  #  G4 P300000                                         # Wait 5 min for the bedtemp to stabilize
  #{% endif %}

  CLEAN_NOZZLE                                         # Run the Clean_Nozzle macro

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
  _STATUS_LEVELING                                     # Set LEDs to leveling-mode
  ##Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
  ##G28 Z                                                # Home Z again after Z_TILT_ADJUST

  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
  _STATUS_MESHING                                      # Set LEDs to bed mesh-mode
  ##BED_MESH_CALIBRATE ADAPTIVE=1                        # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh
  SKEW_PROFILE LOAD=CaliFlower
  CARTOGRAPHER_TOUCH                                   # Calibrate z offset only with hot nozzle

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"    # Display info on display
  _STATUS_HEATING                                      # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                     # Go to center of the bed
  M107                                                 # Turn off partcooling fan
  M109 S{target_extruder}                              # Heat the hotend to set temp

  CLEAN_NOZZLE                                         # Run the Clean_Nozzle macro

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"              # Display info on display
  _STATUS_PRINTING                                     # Set LEDs to printing-mode
  G0 X{x_wait - 50} Y4 F10000                          # Go to starting point
  G0 Z0.4                                              # Raise Z to 0.4
  G91                                                  # Incremental positioning 
  G1 X100 E20 F1000                                    # Primeline
  G90                                                  # Absolute position

[gcode_macro _PRINT_START]
gcode:
    BED_MESH_CLEAR

    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    
    M117 Heating bed...
    _STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
    # SET_HEATER_TEMPERATURE HEATER=extruder TARGET={140}
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={BED_TEMP}

    # turn off fans before running the bed mesh to avoid noise in the measurement
    # the 12032 fan needs some time to spin down
    M106 S0
    SET_FAN_SPEED FAN=Fume_pack SPEED=0
    
    M117 Homing...
    _status_homing
    G28

    M117 Waiting for fans to spin down
    G4 P3000
    
    M117 Syncing motors...
    SYNC_MOTORS FORCE_RUN=1
    
    M117 Z_tilt_adjusting...
    _status_calibrating_z
    Z_TILT_ADJUST

    
    M117 Calibrating bed mesh
    _status_meshing
    G28 Z
    # wait a while to give the 12032 fans time to fully spin down
    # G4 P10000
    BED_MESH_CALIBRATE ADAPTIVE=1
    CARTOGRAPHER_TOUCH
    SKEW_PROFILE LOAD=CaliFlower


    M117 Heating nozzle...
    _STATUS_HEATING
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}

    # turn the fume pack back on
    SET_FAN_SPEED FAN=Fume_pack SPEED=1
    G90
    G1 X040  Y000 Z010 F7200
    G90
    
    M117 Heating nozzle...
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={EXTRUDER_TEMP}

    _STATUS_PRINTING
    M117 Pre-print purge...
    DRAW_LINES
    
    G91
    G1 Z5
    G90

    M117 # Clearing text messages from console

#--------------------------------------------------------------------
[gcode_macro _PRINT_END]
gcode:
    _status_ready
    SET_SKEW CLEAR=1

    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 50, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F18000  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0


#--------------------------------------------------------------------
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  # {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  # {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set x_park = 300 %}
  {% set y_park = 0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 50.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
#--------------------------------------------------------------------
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
#--------------------------------------------------------------------

[gcode_macro CANCEL_PRINT]
# Defines a G-code macro to cancel the actual running print
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
variable_park = True
gcode = 
    G91
    G0 Z10
    G90
    G28 Y                                     # Home Y axis
    _TOOLHEAD_PARK_PAUSE_CANCEL               # Call _TOOLHEAD_PARK_PAUSE_CANCEL macro
    TURN_OFF_HEATERS                          # Turn off all heaters
    CANCEL_PRINT_BASE                         # Call CANCEL_PRINT_BASE to cancel print

[gcode_macro _START_PRINT]
gcode:
    _PRINT_START {rawparams}

[gcode_macro _END_PRINT]
gcode:
    _PRINT_END {rawparams}

[gcode_macro _START_PRINT2]
gcode:
    _PRINT_START2 {rawparams}


[gcode_macro _PRINT_START_BASIC]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED_TEMP|int %}
  {% set target_extruder = params.EXTRUDER_TEMP|int %}
  {% set target_chamber = params.CHAMBER_TEMP|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  _STATUS_HOMING                                       # Set LEDs to homing-mode
  #G28                                                  # Full home (XYZ)
  #G90                                                  # Absolute position
  BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)
  SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"            # Display info on display
  _STATUS_HEATING                                      # Set LEDs to heating-mode
  M106 S255                                            # Turn on the PT-fan
  M190 S{target_bed}                                   # Set the target temp for the bed
  SET_FAN_SPEED FAN=Fume_pack SPEED=1
  
  # Heat hotend to 150c. This helps with getting a correct Z-home.
  #SET_DISPLAY_TEXT MSG="Hotend: 150c"                  # Display info on display
  #M109 S150                                            # Heat hotend to 150c

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"    # Display info on display
  _STATUS_HEATING                                      # Set LEDs to heating-mode
  #G1 X{x_wait} Y{y_wait} Z15 F9000                     # Go to center of the bed
  M107                                                 # Turn off partcooling fan
  M109 S{target_extruder}                              # Heat the hotend to set temp

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"              # Display info on display
  _STATUS_PRINTING                                     # Set LEDs to printing-mode
  #G0 X{x_wait - 50} Y4 F10000                          # Go to starting point
  #G0 Z0.4                                              # Raise Z to 0.4
  #G91                                                  # Incremental positioning 
  #G1 X100 E20 F1000                                    # Primeline
  #G90                                                  # Absolute position